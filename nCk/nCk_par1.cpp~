#include<iostream>
#include<cstdio>

using namespace std;

const int modref=1000000007;
const int max_n=5000;
const int max_k=5000;

int n,k;
int C[max_n+1][max_k+1];

int main()
{
	scanf("%d%d",&n,&k);
	
	for(int ck=1; ck<=k; ++ck)
		C[0][ck]=0;
	for(int cn=0; cn<=n; ++cn)
		C[cn][0]=1;
	
	for(int cn=1; cn<=n; ++cn)
	{
		int chunk=max(k/8,1);
		#pragma omp parallel(C,chunk)
		{
			#pragma omp for schedule(dynamic,chunk)
				for(int ck=1; ck<=k; ++ck)
				{
					C[cn][ck]=C[cn-1][ck-1]+C[cn-1][ck];
					C[cn][ck]%=modref;
				}
		}
	}
	
	printf("%d\n",C[n][k]);
	
	return 0;
}
