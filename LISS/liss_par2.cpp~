#include<iostream>
#include<cstdio>
#include<omp.h>

using namespace std;

const int max_n=10000;
int n;
int A[max_n];
int liss[max_n];

int main()
{
	scanf("%d",&n);
	
	for(int i=0; i<n; ++i)
		scanf("%d",&A[i]);
	
	int chunk
	#pragma omp parallel shared(A,liss,chunk,i)
	{
		for(int i=0; i<n; ++i)
		{
			liss[i]=1;
			chunk=max(i/8,1);
			#pragma omp for schedule(dynamic,chunk)
				for(int j=0; j<i; ++j)
				{
					#pragma omp critical
					{
						//cout<<i<<" "<<j<<endl;
						if(A[j]<A[i])
							liss[i]=max(liss[i],liss[j]+1);
					}
				}
			//cout<<endl;
		}
	}
	
	printf("%d\n",liss[n-1]);
}

